docker run --gpus all -it -p 8888:8888 --restart=always -v /home/eyaweiw/github/:/tf eyaweiw.cn:5000/tensorflow/tensorflow:2.9.1-gpu-jupyter-coursera2-minigpt &

In the docker:
Run a single stockId:
set mem to less then 0 will ignore this setting(use the total memory of gpu)
python main.py -id 300059 -tfs True -gpu 0 -mem 0

Run with all stockIds with multiple gpu:(sufix is the end string of stockId)
Can run 2 train process each with 10g memory in Rtx3090, set mem to 0 will ignore this setting
python main_multiple.py -sufix 0 -tfs True -gpu 0 -mem 10240

To use other checkpoint Id (instead of itself) for prediction (time is less):
python main.py -id 300059 -tfs False -ckp 399006

To predit the next date (9999-01-01), use -preictLen 0 (default is 0),  1 means predict today and next date, 2 means yesterday,today and next date
python main.py -id 300059 -tfs False -preictLen 0

Daily prediction for all AI filter stockId:
python main_multiple.py -tfs False -preictLen 2

Important:
1. Currently for price len is bigger than 2500 (10 years), will have itself pre-train model, the checkpoint file is Transformer+TimeEmbedding_mean_<stockId>.hdf5, can use this checkpoint for predict.
2. For price len is less than 2500 and bigger than 500 (2 years), do not have itself pre-train model yet, due to the train time is too much. You can use other checkpoint (such as 999999, 399001, 399006) for price prediction, the result should be good enough.
3. For price len is less then 500 (2 year), reject to train the model, pls use other checkpoint for price prediction, the result should be good enough.
4. The pre-train checkpoint 999999 can be use for 6xxxxx stock price prediction, 399001 for 0xxxxx stock price prediction and 399006 for 3xxxxx prediction.



============================Candlestick Pattern====================================
Run single stockIds and save to DB:(modify the stockId in file)
python myCandleStickPattern.py 

Run all stockIds and save to DB:
python myAllCandleStickPattern.py
